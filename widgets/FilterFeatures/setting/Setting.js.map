{"version":3,"sources":["../../../../widgets/FilterFeatures/setting/Setting.js"],"names":["declare","BaseWidgetSetting","_WidgetsInTemplateMixin","QueryTask","Query","lang","LayerInfos","array","dom","on","esriRequest","TableContainer","html","Select","TextBox","Button","domConstruct","registry","baseClass","startup","inherited","arguments","setConfig","config","_contador","_features","_divIdPref","_keyIdPref","_layerInfosObjClone","postCreate","_setListLayers","NodeUrlDepa","NodeFieldLabelDepa","NodeFieldValueDepa","NodeUrlProv","NodeFieldLabelProv","NodeFieldValueProv","NodeUrlDist","NodeFieldLabelDist","NodeFieldValueDist","_populateSelect","setValue","departamento","id","label","value","provincia","distrito","getConfig","features","dojonodeService","dojonodeAlias","dojonodeValue","getInstance","map","itemInfo","then","hitch","layerInfosObj","infos","getLayerInfoArray","options","i","arrayLayers","getSubLayers","length","arrayoptions","_listSubLayerdOfRootLayer","push","apply","optSubLayers","_layerInfos","concat","infoSubLayers","title","evt","selectedLayer","getLayerInfoById","url","getUrl","response","fields","optionFields","forEach","field","alias","name","set","optionsSublayers","infosSublayers","recursiveSubLayers","sublayers","NodeFeatures","_addRowLayerSelected","layer","iddiv","keyf","controler","reg","byId","container","dojo","create","_programmatic","cols","class","customClass","sel","style","width","but","spanLabel","onClick","destroy","addChild"],"mappings":"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","file":"Setting.js","sourcesContent":["import declare from 'dojo/_base/declare';\r\nimport BaseWidgetSetting from 'jimu/BaseWidgetSetting';\r\nimport _WidgetsInTemplateMixin from 'dijit/_WidgetsInTemplateMixin';\r\nimport QueryTask from 'esri/tasks/QueryTask';\r\nimport Query from 'esri/tasks/query';\r\nimport lang from 'dojo/_base/lang';\r\nimport LayerInfos from 'jimu/LayerInfos/LayerInfos';\r\nimport array from 'dojo/_base/array';\r\nimport dom from \"dojo/dom\";\r\nimport on from \"dojo/on\";\r\nimport esriRequest from \"esri/request\";\r\nimport TableContainer from 'dojox/layout/TableContainer';\r\nimport html from \"dojo/html\";\r\nimport Select from \"dijit/form/Select\";\r\nimport TextBox from \"dijit/form/TextBox\";\r\nimport Button from \"dijit/form/Button\";\r\nimport domConstruct from \"dojo/dom-construct\";\r\nimport registry from \"dijit/registry\";\r\n\r\n\r\n\r\n\r\nexport default declare([\r\n    BaseWidgetSetting,\r\n    _WidgetsInTemplateMixin,\r\n    QueryTask,\r\n    Query,\r\n], {\r\n\r\n    baseClass: 'filter-features-setting',\r\n\r\n\r\n    startup: function() {\r\n        this.inherited(arguments);\r\n        this.setConfig(this.config);\r\n\r\n        _contador = 0;\r\n        _features = {};\r\n        _divIdPref = 'divff_';\r\n        _keyIdPref = 'keyff_';\r\n        _layerInfosObjClone;\r\n    },\r\n\r\n    postCreate() {\r\n\r\n        // self = this;\r\n        this._setListLayers(this.NodeUrlDepa, this.NodeFieldLabelDepa, this.NodeFieldValueDepa);\r\n        this._setListLayers(this.NodeUrlProv, this.NodeFieldLabelProv, this.NodeFieldValueProv);\r\n        this._setListLayers(this.NodeUrlDist, this.NodeFieldLabelDist, this.NodeFieldValueDist);\r\n\r\n        // this._gridxLayers();\r\n        this._populateSelect()\r\n\r\n    },\r\n\r\n    setConfig(config) {\r\n        _features = {}\r\n        this.config = config;\r\n        this.NodeUrlDepa.setValue(config.departamento.id);\r\n        this.NodeFieldLabelDepa.setValue(config.departamento.label);\r\n        this.NodeFieldValueDepa.setValue(config.departamento.value);\r\n\r\n        this.NodeUrlProv.setValue(config.provincia.id);\r\n        this.NodeFieldLabelProv.setValue(config.provincia.label);\r\n        this.NodeFieldValueProv.setValue(config.provincia.value);\r\n\r\n        this.NodeUrlDist.setValue(config.distrito.id);\r\n        this.NodeFieldLabelDist.setValue(config.distrito.label);\r\n        this.NodeFieldValueDist.setValue(config.distrito.value);\r\n    },\r\n\r\n    getConfig() {\r\n        // var idSelect;\r\n        // var idButton;\r\n        // for (i = 0; i < _contador; i++) {\r\n        //   idSelect = \"selectFF_${i}\";\r\n        // }\r\n\r\n        return {\r\n            departamento: {\r\n                'id': this.NodeUrlDepa.value,\r\n                'label': this.NodeFieldLabelDepa.value,\r\n                'value': this.NodeFieldValueDepa.value\r\n            },\r\n            provincia: {\r\n                'id': this.NodeUrlProv.value,\r\n                'label': this.NodeFieldLabelProv.value,\r\n                'value': this.NodeFieldValueProv.value\r\n            },\r\n            distrito: {\r\n                'id': this.NodeUrlDist.value,\r\n                'label': this.NodeFieldLabelDist.value,\r\n                'value': this.NodeFieldValueDist.value\r\n            },\r\n            features: _features\r\n        };\r\n    },\r\n\r\n    _setListLayers(dojonodeService, dojonodeAlias, dojonodeValue) {\r\n        LayerInfos.getInstance(this.map, this.map.itemInfo)\r\n            .then(lang.hitch(this, function(layerInfosObj) {\r\n                var infos = layerInfosObj.getLayerInfoArray();\r\n                _layerInfosObjClone = layerInfosObj;\r\n                var options = [];\r\n                for (var i in infos) {\r\n                    var arrayLayers = infos[i].getSubLayers();\r\n                    if (arrayLayers.length > 0) {\r\n                        var arrayoptions = this._listSubLayerdOfRootLayer(arrayLayers);\r\n                        options.push.apply(options, arrayoptions.optSubLayers);\r\n                        _layerInfosObjClone._layerInfos = _layerInfosObjClone._layerInfos.concat(arrayoptions.infoSubLayers);\r\n                    } else {\r\n                        options.push({\r\n                            label: infos[i].title,\r\n                            value: infos[i].id,\r\n                            // value: infos[i].layerObject.url,\r\n                        })\r\n                    }\r\n                };\r\n                dojonodeService.options = options;\r\n\r\n                dojonodeService.on('change', function(evt) {\r\n                    var selectedLayer = _layerInfosObjClone.getLayerInfoById(evt);\r\n\r\n                    var url = selectedLayer.getUrl();\r\n                    esriRequest({\r\n                        url: url + \"?f=json\"\r\n                        // url: evt + \"?f=json\"\r\n                    }).then(function(response) {\r\n                        var fields = response.fields;\r\n                        var optionFields = []\r\n                        fields.forEach(function(field) {\r\n                            optionFields.push({\r\n                                label: field.alias,\r\n                                value: field.name,\r\n                            })\r\n                        })\r\n                        dojonodeAlias.set('options', optionFields);\r\n                        dojonodeValue.set('options', optionFields);\r\n                    });\r\n                })\r\n            }));\r\n    },\r\n\r\n    _listSubLayerdOfRootLayer(arrayLayers) {\r\n        var optionsSublayers = [];\r\n        var infosSublayers = [];\r\n        recursiveSubLayers(arrayLayers);\r\n\r\n        function recursiveSubLayers(arrayLayers) {\r\n            for (var i in arrayLayers) {\r\n                var sublayers = arrayLayers[i].getSubLayers();\r\n                if (sublayers.length > 0) {\r\n                    recursiveSubLayers(sublayers)\r\n                } else {\r\n                    optionsSublayers.push({\r\n                        label: arrayLayers[i].title,\r\n                        value: arrayLayers[i].id\r\n                        // value: arrayLayers[i].layerObject.url\r\n                    });\r\n                    infosSublayers.push(arrayLayers[i]);\r\n                }\r\n            }\r\n        };\r\n        return {\r\n            optSubLayers: optionsSublayers,\r\n            infoSubLayers: infosSublayers\r\n        }\r\n    },\r\n\r\n    _populateSelect() {\r\n        this.NodeFeatures.options = this.NodeUrlDepa.options;\r\n        // this.NodeFeatures.on('change', function(evt) {\r\n        //     self._addRowLayerSelected(evt);\r\n        // })\r\n    },\r\n\r\n    _addRowLayerSelected(evt) {\r\n        var layer = _layerInfosObjClone.getLayerInfoById(evt)\r\n        var url = layer.getUrl();\r\n        _contador = _contador + 1\r\n        var iddiv = `${_divIdPref}${_contador}`\r\n        var keyf = `${_keyIdPref}${_contador}`\r\n        var controler = true;\r\n\r\n        while (controler) {\r\n          var reg = registry.byId(iddiv);\r\n          if (reg){\r\n            _contador = _contador + 1;\r\n            iddiv = `${_divIdPref}${_contador}`;\r\n            keyf = `${_keyIdPref}${_contador}`;\r\n          }else{\r\n            controler = false;\r\n          }\r\n        }\r\n        // var regregistry.byId(iddiv)\r\n\r\n        // var r = {}\r\n        // r[_contador] = {url: evt}\r\n        _features[keyf] = {id: evt};\r\n\r\n        var container = dojo.create(\"div\", {id: iddiv}, \"idfeaturesSelected\");\r\n        // }\r\n\r\n        _programmatic = new TableContainer({\r\n            cols: 2,\r\n            class: \"containerItemsFeatures\",\r\n            customClass: \"labelsAndValues\",\r\n            \"labelWidth\": \"40%\"\r\n        }, container);\r\n\r\n        esriRequest({\r\n            url: url + \"?f=json\"\r\n        }).then(function(response) {\r\n            var fields = response.fields;\r\n            var optionFields = [{label: '------', value: '0'}]\r\n            fields.forEach(function(field) {\r\n                optionFields.push({\r\n                    label: field.alias,\r\n                    value: field.name,\r\n                })\r\n            })\r\n            var sel = new Select({\r\n                // id: `selectFF_${_contador}`,\r\n                // name: \"fieldSelect\",\r\n                options: optionFields,\r\n                style:{width: \"300px\"},\r\n                label: response.name,\r\n            });\r\n\r\n            sel.on(\"change\", function(evt){\r\n              _features[keyf][\"field\"] = evt;\r\n            })\r\n\r\n            var but = new Button({\r\n                // id: `buttonFF_${_contador}`,\r\n                // name: \"removeButton\",\r\n                label: \"remover\",\r\n                spanLabel: true,\r\n                onClick:\r\n                  function(){\r\n                    delete _features[keyf]; \r\n                    domConstruct.destroy(iddiv);\r\n                  }\r\n            })\r\n\r\n            _programmatic.addChild(sel);\r\n            _programmatic.addChild(but);\r\n            _programmatic.startup();\r\n        })\r\n\r\n\r\n\r\n        // Create four text boxes\r\n\r\n        // var sel = new Select({\r\n        //   name: \"fieldSelect\",\r\n        //   options: [{label:1, value:1}],\r\n        //   label: \"checar\"\r\n        // })\r\n\r\n        // var text1 = new TextBox({\r\n        //     label: \"ProgText 1\"\r\n        // });\r\n        // var text2 = new TextBox({\r\n        //     label: \"ProgText 2\"\r\n        // });\r\n        // var text3 = new TextBox({\r\n        //     label: \"ProgText 3\"\r\n        // });\r\n        // var text4 = new TextBox({\r\n        //     label: \"ProgText 4\"\r\n        // });\r\n\r\n        // Add the four text boxes to the TableContainer\r\n        // programmatic.addChild(sel);\r\n        // programmatic.addChild(text2);\r\n        // programmatic.addChild(text3);\r\n        // programmatic.addChild(text4);\r\n\r\n        // Start the table container. This initializes it and places\r\n        // the child widgets in the correct place.\r\n        // programmatic.startup();\r\n    }\r\n\r\n\r\n\r\n})"]}